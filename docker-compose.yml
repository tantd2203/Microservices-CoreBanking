
services:
  postgres:
    image: postgres:16.2
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: database
    ports:
      - "3306:3306"
    volumes:
      - /docker/mysql_data:/var/lib/mysql
    networks:
      - mysql_network


  vault:
    image: vault:1.13.3
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 18456350-7b89-11ed-85e9-a5830358e351
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    command: vault server -dev -dev-root-token-id=18456350-7b89-11ed-85e9-a5830358e351
    networks:
      - vault_network


volumes:
  postgres_data:
    driver: local

networks:
  keycloak_network:
    driver: bridge
  mysql_network:
    driver: bridge
  vault_network:
    driver: bridge