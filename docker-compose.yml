services:

  postgres:
    image: postgres:16.2
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.0
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - 8081:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network

  mysql:
      image: mysql:8.0
      container_name: mysql
      environment:
        MYSQL_ROOT_PASSWORD: 123456
        MYSQL_DATABASE: internet_banking
      ports:
        - 3302:3306
      volumes:
        - ./docker/mysql_data:/var/lib/mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
      image: confluentinc/cp-kafka
      container_name: ms_kafka
      ports:
        - "9092:9092"
      depends_on:
        - zookeeper
      environment:
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      networks:
        - microservices-net
#  vault:
#    image: vault:1.13.3
#    container_name: vault
#    environment:
#      VAULT_DEV_ROOT_TOKEN_ID: 18456350-7b89-11ed-85e9-a5830358e351
#      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
#    ports:
#      - "8200:8200"
#    cap_add:
#      - IPC_LOCK
#    command: vault server -dev -dev-root-token-id=18456350-7b89-11ed-85e9-a5830358e351
#    networks:
#      - vault_network


volumes:
  postgres_data:
    driver: local
  mysql_data:
    driver: local

networks:
  keycloak_network:
    driver: bridge
  microservices-net:
    driver: bridge
  mysql_network:
    driver: bridge
  vault_network:
    driver: bridge